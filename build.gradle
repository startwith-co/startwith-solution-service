plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.6'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'startwith-co'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2022.0.5"
    }
}

dependencies {
    // eureka
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    // MySQL
    runtimeOnly 'com.mysql:mysql-connector-j'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //spring
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation('org.springframework.boot:spring-boot-starter-web')

    //jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //open feign
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign"

    // kafka
    implementation 'org.springframework.kafka:spring-kafka'

    // prometheus
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '3.1.6'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    // Test Implementation
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '5.8.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    runtimeOnly 'com.h2database:h2'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
    useJUnitPlatform()
}